{
  "name": "assay",
  "displayName": "assay",
  "publisher": "mozilla",
  "description": "A Firefox Addons review tool disguised as a VSCode exention.",
  "version": "1.0.1",
  "repository": {
    "type": "git",
    "url": "https://github.com/mozilla/assay"
  },
  "icon": "media/assay.jpeg",
  "engines": {
    "vscode": "^1.78.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onUri",
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "Assay",
      "properties": {
        "assay.rootFolder": {
          "type": "string",
          "description": "The directory where add-ons are saved. Using the 'Files: Readonly Include' setting, Assay will set the new directory to readonly and release the original.",
          "default": ""
        },
        "assay.diffTool": {
          "type": "string",
          "description": "Command to launch external tool to diff add-ons.",
          "default": ""
        },
        "assay.deleteCommentsOnExport": {
          "type": "string",
          "description": "Whether or not to delete comments after exporting.",
          "default": "No Preference",
          "enum": ["Yes", "No", "Ask Every Time"]
        }
      }
    },
    "menus": {
      "explorer/context": [
        {
          
          "command": "assay.openInDiffTool",
          "group": "navigation",
          "when": "assay.commentsEnabled && explorerResourceIsFolder && listDoubleSelection"
        },
        {
          
          "command": "assay.exportCommentsFromContext",
          "group": "navigation",
          "when": "assay.commentsEnabled && explorerResourceIsFolder"
        },
        {
          "command": "assay.deleteCommentsFromContext",
          "group": "navigation",
          "when": "explorerResourceIsFolder"
        }
      ],
      "comments/commentThread/title": [
        {
					"command": "assay.exportComments",
					"group": "inline@1",
          "when": "assay.commentsEnabled && !commentThreadIsEmpty"
				},
        {
					"command": "assay.editComment",
					"group": "inline@2",
					"when": "assay.commentsEnabled && commentController == assay-comments && !commentThreadIsEmpty"
				},
        {
					"command": "assay.copyLinkFromThread",
					"group": "inline@3",
          "when": "assay.commentsEnabled && !commentThreadIsEmpty"
				},
				{
					"command": "assay.deleteComment",
					"group": "inline@5",
					"when": "assay.commentsEnabled && commentController == assay-comments && !commentThreadIsEmpty"
				}
      ],
      "comments/commentThread/context": [
        {
					"command": "assay.addComment",
					"group": "inline@1",
					"when": "assay.commentsEnabled && commentController == assay-comments && commentThreadIsEmpty"
				},
        {
					"command": "assay.copyLinkFromReply",
					"group": "inline@2",
					"when": "assay.commentsEnabled && commentController == assay-comments && commentThreadIsEmpty"
				}
			],
			"comments/comment/title": [
				
			],
			"comments/comment/context": [
				{
					"command": "assay.cancelSaveComment",
					"group": "inline@3",
					"when": "assay.commentsEnabled && commentController == assay-comments"
				},
				{
					"command": "assay.saveComment",
					"group": "inline@2",
					"when": "assay.commentsEnabled && commentController == assay-comments"
				}
			]
    },
    "views": {
      "explorer": [
        {
          "id": "assayCommands",
          "name": "Assay"
        }
      ]
    },
    "commands": [
      {
        "command": "assay.welcome",
        "title": "(Assay) Show Instructions"
      },
      {
        "command": "assay.openInDiffTool",
        "title": "(Assay) Open in Diff Tool"
      },
      {
        "command": "assay.exportCommentsFromContext",
        "title": "(Assay) Export Version Comments"
      },
      {
        "command": "assay.deleteCommentsFromContext",
        "title": "(Assay) Delete Version Comments"
      },
      {
        "command": "assay.checkForUpdates",
        "title": "(Assay) Check For Updates"
      },
      {
				"command": "assay.copyLinkFromReply",
				"title": "Copy Link"
			},
      {
				"command": "assay.addComment",
				"title": "Mark for Review"
			},
			{
				"command": "assay.editComment",
				"title": "Edit Comment",
				"icon": {
					"dark": "media/commentIcons/edit_inverse.svg",
					"light": "media/commentIcons/edit.svg"
				}
			},
			{
				"command": "assay.deleteComment",
				"title": "Delete",
				"icon": {
					"dark": "media/commentIcons/close_inverse.svg",
					"light": "media/commentIcons/close.svg"
				}
			},
			{
				"command": "assay.saveComment",
				"title": "Save"
			},
			{
				"command": "assay.cancelSaveComment",
				"title": "Cancel"
			},
			{
				"command": "assay.disposeComment",
				"title": "Remove All Comments"
			},
      {
				"command": "assay.exportComments",
				"title": "Export Version Comments",
				"icon": {
					"dark": "media/commentIcons/export_inverse.svg",
					"light": "media/commentIcons/export.svg"
				}
			},
      {
				"command": "assay.copyLinkFromThread",
				"title": "Copy Link",
				"icon": {
					"dark": "media/commentIcons/link_inverse.svg",
					"light": "media/commentIcons/link.svg"
				}
			}
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "npm run pretest && tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run format",
    "lint": "eslint src --ext ts --fix",
    "test": "c8 --check-coverage node ./out/test/runTest.js",
    "prettier": "prettier --write \"src/**/*.ts\"",
    "format": "npm run prettier && npm run lint",
    "test:dev": "cross-env NODE_ENV=development npm run test",
    "test:prod": "cross-env NODE_ENV=production npm run test",
    "test:stage": "cross-env NODE_ENV=staging npm run test",
    "test-all": "npm run test-dev && npm run test-prod && npm run test-stage",
    "compile:dev": "cross-env NODE_ENV=development npm run compile",
    "compile:prod": "cross-env NODE_ENV=production npm run compile",
    "compile:stage": "cross-env NODE_ENV=staging npm run compile",
    "build": "vsce package"
  },
  "devDependencies": {
    "@types/chai": "^4.3.5",
    "@types/glob": "^8.1.0",
    "@types/jsonwebtoken": "^9.0.2",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/node-fetch": "^2.6.4",
    "@types/sinon": "^10.0.15",
    "@types/vscode": "^1.78.0",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "@vscode/test-electron": "^2.3.9",
    "@vscode/vsce": "^2.23.0",
    "c8": "^7.14.0",
    "chai": "^4.3.7",
    "cross-env": "^7.0.3",
    "eslint": "^8.39.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-import-resolver-node": "^0.3.7",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-prettier": "^4.2.1",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "node-fetch": "^2.6.1",
    "prettier": "^2.8.8",
    "sinon": "^15.1.0",
    "ts-loader": "^9.4.2",
    "ts-node": "^10.9.1",
    "typescript": "^5.0.4",
    "vsce": "^1.97.0",
    "webpack": "^5.81.0",
    "webpack-cli": "^5.0.2"
  },
  "dependencies": {
    "@types/request": "^2.48.8",
    "extract-zip": "^2.0.1",
    "jsonwebtoken": "^9.0.1",
    "jszip": "^3.10.1"
  }
}